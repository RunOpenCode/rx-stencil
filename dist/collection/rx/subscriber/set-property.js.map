{"version":3,"file":"set-property.js","sourceRoot":"","sources":["../../../src/rx/subscriber/set-property.ts"],"names":[],"mappings":"AAAA,OAAO,EAEH,WAAW,GACd,MAAM,eAAe,CAAC;AAiBvB,MAAM,UAAU,WAAW,CAAU,GAAuB,EAAE,QAAgB,EAAE,UAA8B,EAAE;EAC5G,IAAI,eAAe,mBACf,cAAc,EAAE,KAAK,EACrB,QAAQ,EAAQ,IAAI,IACjB,OAAO,CACb,CAAC;EAEF,OAAO,CAAC,KAAQ,EAAQ,EAAE;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAEtB,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;MACjC,OAAO;KACV;IAED,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;MAC3B,WAAW,CAAC,GAAG,CAAC,CAAC;MACjB,OAAO;KACV;IAED,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAS,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;EACzD,CAAC,CAAC;AACN,CAAC","sourcesContent":["import {\n    ComponentInterface,\n    forceUpdate,\n} from '@stencil/core';\n\nexport type SetPropertyOptions = {\n    /**\n     * Whether to schedule a render of the component after the\n     * property is updated. By default, this value is set to\n     * `false`, assuming that the property is annotated with\n     * either @State or @Prop decorator.\n     */\n    scheduleRender?: boolean;\n    /**\n     * Whether to schedule a render of the component on the next\n     * tick. By default, this value is set to `true`.\n     */\n    nextTick?: boolean;\n}\n\nexport function setProperty<T = any>(cmp: ComponentInterface, property: string, options: SetPropertyOptions = {}): (value: T) => void {\n    let resolvedOptions: SetPropertyOptions = {\n        scheduleRender: false,\n        nextTick:       true,\n        ...options,\n    };\n\n    return (value: T): void => {\n        cmp[property] = value;\n\n        if (!resolvedOptions.scheduleRender) {\n            return;\n        }\n\n        if (!resolvedOptions.nextTick) {\n            forceUpdate(cmp);\n            return;\n        }\n\n        Promise.resolve().then((): void => forceUpdate(cmp));\n    };\n}\n"]}