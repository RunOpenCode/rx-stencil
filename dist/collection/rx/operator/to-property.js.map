{"version":3,"file":"to-property.js","sourceRoot":"","sources":["../../../src/rx/operator/to-property.ts"],"names":[],"mappings":"AACA,OAAO,EAEH,GAAG,GACN,MAAqC,MAAM,CAAC;AAC7C,OAAO,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAC;AAEpD;;;;;GAKG;AACH,MAAM,UAAU,UAAU,CAAU,GAAuB,EAAE,QAAgB;EACzE,wDAAwD;EACxD,qBAAqB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;EAErC,aAAa;EACb,OAAO,CAAC,MAAqB,EAAwB,EAAE;IACnD,OAAO,MAAM,CAAC,IAAI,CACd,GAAG,CAAC,CAAC,KAAQ,EAAQ,EAAE;MACnB,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC1B,CAAC,CAAC,CACL,CAAC;EACN,CAAC,CAAC;AACN,CAAC","sourcesContent":["import { ComponentInterface }             from '@stencil/core';\nimport {\n    MonoTypeOperatorFunction,\n    tap,\n}                                from 'rxjs';\nimport { getPropertyDescriptor } from '../../utils';\n\n/**\n * Use this function to tap into a value stream and flush value to\n * component property. You may also use this function as subscription\n * function (function will detect that value is passed instead of\n * observable).\n */\nexport function toProperty<T = any>(cmp: ComponentInterface, property: string): MonoTypeOperatorFunction<T> {\n    // ensure that the property is defined on the component.\n    getPropertyDescriptor(cmp, property);\n\n    // @ts-ignore\n    return (source: Observable<T>): Observable<T> | void => {\n        return source.pipe(\n            tap((value: T): void => {\n                cmp[property] = value;\n            }),\n        );\n    };\n}\n"]}