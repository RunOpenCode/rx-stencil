{"version":3,"file":"async.js","sourceRoot":"","sources":["../../../src/components/async/async.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EAET,CAAC,EACD,IAAI,EACJ,IAAI,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EACH,IAAI,EACJ,YAAY,EAEZ,EAAE,EACF,SAAS,GACZ,MAAM,MAAM,CAAC;AACd,OAAO,EACH,kBAAkB,EAClB,WAAW,GACd,MAAM,UAAU,CAAC;AASlB,MAAM,OAAO,KAAK;;IAKN,WAAM,GAAY,IAAI,CAAC;iBAFJ,IAAI;;EAIxB,iBAAiB;IACpB,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,CAAC,KAAiB,EAAuB,EAAE;MACjD,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;QACrB,OAAO,KAAK,CAAC;OAChB;MAED,IAAI,KAAK,YAAY,OAAO,EAAE;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;OACtB;MAED,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC,CACL,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;MACpC,cAAc,EAAE,IAAI;MACpB,QAAQ,EAAQ,KAAK;KACxB,CAAC,CAAC,CAAC;EACR,CAAC;EAEM,oBAAoB;IACvB,OAAO;EACX,CAAC;EAEM,MAAM;IACT,OAAO,CACH,EAAC,IAAI,QACA,IAAI,CAAC,MAAM,CACT,CACV,CAAA;EACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    ComponentInterface,\n    h,\n    Host,\n    Prop,\n} from '@stencil/core';\nimport {\n    from,\n    isObservable,\n    Observable,\n    of,\n    switchMap,\n} from 'rxjs';\nimport {\n    propertyObservable,\n    setProperty,\n} from '../../rx';\n\nexport type AsyncValue = Promise<unknown> | Observable<unknown> | null | undefined;\n\n@Component({\n    tag:      'rx-async',\n    shadow:   false,\n    styleUrl: 'async.scss',\n})\nexport class Async implements ComponentInterface {\n\n    @Prop()\n    public value: AsyncValue = null;\n\n    private _value: unknown = null;\n\n    public connectedCallback(): void {\n        propertyObservable(this, 'value').pipe(\n            switchMap((value: AsyncValue): Observable<unknown> => {\n                if (isObservable(value)) {\n                    return value;\n                }\n\n                if (value instanceof Promise) {\n                    return from(value);\n                }\n\n                return of(value);\n            }),\n        ).subscribe(setProperty(this, '_value', {\n            scheduleRender: true,\n            nextTick:       false,\n        }));\n    }\n\n    public disconnectedCallback(): void {\n        // noop\n    }\n\n    public render(): any {\n        return (\n            <Host>\n                {this._value}\n            </Host>\n        )\n    }\n}"]}