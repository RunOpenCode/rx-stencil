{"version":3,"file":"get-property-descriptor.js","sourceRoot":"","sources":["../../src/utils/get-property-descriptor.ts"],"names":[],"mappings":"AAEA;;;;GAIG;AACH,MAAM,UAAU,qBAAqB,CAAC,GAAuB,EAAE,QAAgB,EAAE,uBAAgC,IAAI;EACjH,uEAAuE;EACvE,IAAI,SAAS,GAAwB,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;EAChE,IAAI,UAAU,GAAuB,MAAM,CAAC,wBAAwB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;EAE1F,IAAI,CAAC,UAAU,EAAE;IACb,MAAM,IAAI,KAAK,CAAC,aAAa,QAAQ,kCAAkC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC;GACpG;EAED,IAAI,oBAAoB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;IAClD,MAAM,IAAI,KAAK,CAAC,aAAa,QAAQ,uCAAuC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC;GACzG;EAED,OAAO,UAAU,CAAC;AACtB,CAAC","sourcesContent":["import { ComponentInterface } from '@stencil/core';\n\n/**\n * Returns property descriptor for the given property of the component.\n *\n * {@internal}\n */\nexport function getPropertyDescriptor(cmp: ComponentInterface, property: string, configurableRequired: boolean = true): PropertyDescriptor {\n    // descriptors are defined on prototype, so we have to go one level up.\n    let prototype: object              = Object.getPrototypeOf(cmp);\n    let descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(prototype, property);\n\n    if (!descriptor) {\n        throw new Error(`Property \"${property}\" is not defined on component \"${cmp.constructor.name}\".`);\n    }\n\n    if (configurableRequired && !descriptor.configurable) {\n        throw new Error(`Property \"${property}\" is not configurable on component \"${cmp.constructor.name}\".`);\n    }\n\n    return descriptor;\n}\n"]}