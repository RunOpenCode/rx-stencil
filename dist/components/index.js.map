{"file":"index.js","mappings":"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","names":[],"sources":["node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","node_modules/rxjs/dist/esm/internal/ReplaySubject.js","node_modules/rxjs/dist/esm/internal/operators/map.js","node_modules/rxjs/dist/esm/internal/operators/mergeInternals.js","node_modules/rxjs/dist/esm/internal/operators/mergeMap.js","node_modules/rxjs/dist/esm/internal/operators/mergeAll.js","node_modules/rxjs/dist/esm/internal/operators/concatAll.js","node_modules/rxjs/dist/esm/internal/observable/concat.js","node_modules/rxjs/dist/esm/internal/operators/share.js","node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","node_modules/rxjs/dist/esm/internal/operators/startWith.js","node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","node_modules/rxjs/dist/esm/internal/operators/tap.js","src/rx/observable/render-observable.ts","src/rx/decorator/query-selector.ts","src/rx/decorator/query-selector-all.ts","src/rx/operator/schedule-render.ts","src/rx/operator/to-property.ts","src/rx/operator/until-disconnected.ts"],"sourcesContent":["export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=dateTimestampProvider.js.map","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    const buffer = [];\n    let active = 0;\n    let index = 0;\n    let isComplete = false;\n    const checkComplete = () => {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    const outerNext = (value) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n    const doInnerSub = (value) => {\n        expand && subscriber.next(value);\n        active++;\n        let innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, (innerValue) => {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, () => {\n            innerComplete = true;\n        }, undefined, () => {\n            if (innerComplete) {\n                try {\n                    active--;\n                    while (buffer.length && active < concurrent) {\n                        const bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, () => {\n        isComplete = true;\n        checkComplete();\n    }));\n    return () => {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n//# sourceMappingURL=mergeInternals.js.map","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent = Infinity) {\n    if (isFunction(resultSelector)) {\n        return mergeMap((a, i) => map((b, ii) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n//# sourceMappingURL=mergeMap.js.map","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Infinity) {\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map","import { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function concat(...args) {\n    return concatAll()(from(args, popScheduler(args)));\n}\n//# sourceMappingURL=concat.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options = {}) {\n    const { connector = () => new Subject(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n    return (wrapperSource) => {\n        let connection;\n        let resetConnection;\n        let subject;\n        let refCount = 0;\n        let hasCompleted = false;\n        let hasErrored = false;\n        const cancelReset = () => {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        const reset = () => {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        const resetAndUnsubscribe = () => {\n            const conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate((source, subscriber) => {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            const dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(() => {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: (value) => dest.next(value),\n                    error: (err) => {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: () => {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on, ...args) {\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    const onSubscriber = new SafeSubscriber({\n        next: () => {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n//# sourceMappingURL=share.js.map","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n//# sourceMappingURL=shareReplay.js.map","import { concat } from '../observable/concat';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\nexport function startWith(...values) {\n    const scheduler = popScheduler(values);\n    return operate((source, subscriber) => {\n        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=startWith.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=takeUntil.js.map","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    const tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error, complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate((source, subscriber) => {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            let isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, () => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, (err) => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, () => {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n//# sourceMappingURL=tap.js.map","import { ComponentInterface } from '@stencil/core';\nimport {\n    Observable,\n    Subscriber,\n    TeardownLogic,\n}                             from 'rxjs';\n\n/**\n * Returns an observable that emits when the component render()\n * function is called. Value will be emitted after the next\n * microtask (next tick).\n */\nexport function renderObservable(cmp: ComponentInterface): Observable<void> {\n    if ('function' !== typeof cmp.render) {\n        throw new Error('Component does not have a render function.');\n    }\n\n    return new Observable<void>((subscriber: Subscriber<void>): TeardownLogic => {\n        let previousRender: () => any = cmp.render;\n\n        cmp.render = function (): any {\n            Promise.resolve().then((): void => {\n                subscriber.next();\n            });\n\n            return previousRender.call(this);\n        }\n\n        return (): void => {\n            cmp.render = previousRender;\n        }\n    });\n}\n","import {\n    ComponentInterface,\n    getElement,\n}                           from '@stencil/core';\nimport {\n    distinctUntilChanged,\n    map,\n    Observable,\n    shareReplay,\n    startWith,\n}                           from 'rxjs';\nimport { renderObservable } from '../observable';\n\n/**\n * Property decorator inspired by Angular's @ViewChild/@ContentChild.\n *\n * After each render, the decorated property will be set to the first element\n * matching the given selector. If no element is found, the property will be\n * set to null.\n */\nexport function QuerySelector<T extends HTMLElement = HTMLElement>(selector: string, shadowRoot: boolean = false): any {\n    return (target: Function, property: string): void => {\n        let descriptor: PropertyDescriptor = {\n            set: function (): void {\n                throw new Error(`Property \"${property}\" is read-only.`);\n            },\n            get: function (this: ComponentInterface): Observable<T | null> {\n                let observableProperty: string = `__rx__query_selector__observable__shadow_root__${shadowRoot ? 'yes' : 'no'}__selector__${selector}__`;\n\n                if (!this[observableProperty]) {\n                    let root: HTMLElement | ShadowRoot = getElement(this);\n\n                    if (shadowRoot) {\n                        root = root.shadowRoot;\n                    }\n\n                    this[observableProperty] = renderObservable(this).pipe(\n                        startWith(),\n                        map((): T => root.querySelector(selector)),\n                        distinctUntilChanged(),\n                        shareReplay(1),\n                    );\n                }\n\n                return this[observableProperty];\n            },\n        }\n\n        Object.defineProperty(target, property, descriptor);\n    };\n}\n","import {\n    ComponentInterface,\n    getElement,\n}                           from '@stencil/core';\nimport {\n    distinctUntilChanged,\n    map,\n    Observable,\n    shareReplay,\n    startWith,\n}                           from 'rxjs';\nimport { renderObservable } from '../observable';\n\n/**\n * Property decorator inspired by Angular's @ViewChild/@ContentChild.\n *\n * After each render, the decorated property will be set to the first element\n * matching the given selector. If no element is found, the property will be\n * set to null.\n */\nexport function QuerySelectorAll<T extends HTMLElement = HTMLElement>(selector: string, shadowRoot: boolean = false): any {\n    return (target: Function, property: string): void => {\n        let descriptor: PropertyDescriptor = {\n            set: function (): void {\n                throw new Error(`Property \"${property}\" is read-only.`);\n            },\n            get: function (this: ComponentInterface): Observable<T | null> {\n                let observableProperty: string = `__rx__query_selector_all__observable__shadow_root__${shadowRoot ? 'yes' : 'no'}__selector__${selector}__`;\n\n                if (!this[observableProperty]) {\n                    let root: HTMLElement | ShadowRoot = getElement(this);\n\n                    if (shadowRoot) {\n                        root = root.shadowRoot;\n                    }\n\n                    this[observableProperty] = renderObservable(this).pipe(\n                        startWith(),\n                        map((): T[] => Array.from(root.querySelectorAll(selector))),\n                        distinctUntilChanged((previous: T[], current: T[]): boolean => {\n                            if (previous.length !== current.length) {\n                                return false;\n                            }\n\n                            for (let i: number = 0; i < previous.length; i++) {\n                                if (previous[i] !== current[i]) {\n                                    return false;\n                                }\n                            }\n\n                            return true;\n                        }),\n                        shareReplay(1),\n                    );\n                }\n\n                return this[observableProperty];\n            },\n        }\n\n        Object.defineProperty(target, property, descriptor);\n    };\n}\n","import {\n    ComponentInterface,\n    forceUpdate,\n} from '@stencil/core';\nimport {\n    MonoTypeOperatorFunction,\n    Observable,\n    tap,\n} from 'rxjs';\n\n/**\n * Schedule a render of the component. This is useful when you\n * want to force a render of the component as result of changing\n * the values of the component which are not tracked by Stencil,\n * observables, for example.\n *\n * By default, the render is scheduled on the next tick, but you\n * can disable this behavior by passing `false` as second argument.\n */\nexport function scheduleRender<T = unknown>(cmp: ComponentInterface, nextTick: boolean = true): MonoTypeOperatorFunction<T> {\n    return (source: Observable<T>): Observable<T> => {\n        return source.pipe(tap((): void => {\n            if (!nextTick) {\n                forceUpdate(cmp);\n                return;\n            }\n\n            Promise.resolve().then((): void => forceUpdate(cmp));\n        }));\n    };\n}\n","import { ComponentInterface }             from '@stencil/core';\nimport {\n    MonoTypeOperatorFunction,\n    tap,\n}                                from 'rxjs';\nimport { getPropertyDescriptor } from '../../utils';\n\n/**\n * Use this function to tap into a value stream and flush value to\n * component property. You may also use this function as subscription\n * function (function will detect that value is passed instead of\n * observable).\n */\nexport function toProperty<T = any>(cmp: ComponentInterface, property: string): MonoTypeOperatorFunction<T> {\n    // ensure that the property is defined on the component.\n    getPropertyDescriptor(cmp, property);\n\n    // @ts-ignore\n    return (source: Observable<T>): Observable<T> | void => {\n        return source.pipe(\n            tap((value: T): void => {\n                cmp[property] = value;\n            }),\n        );\n    };\n}\n","import {\n    ComponentInterface,\n    getElement,\n} from '@stencil/core';\nimport {\n    MonoTypeOperatorFunction,\n    Observable,\n    Subject,\n    Subscriber,\n    takeUntil,\n    TeardownLogic,\n} from 'rxjs';\n\n/**\n * A map of component observables that are being watched for\n * disconnect callback invocation. A weak map is being used\n * so that the component instance can be garbage collected.\n *\n * {@internal}\n */\nlet disconnectObservables: WeakMap<ComponentInterface, Observable<void>> = new WeakMap();\n\n/**\n * A function that creates an observable which emits an event\n * when the component is disconnected from DOM.\n *\n * {@internal}\n */\ntype CreateDisconnectObservableFn = (cmp: ComponentInterface) => Observable<void>;\n\n/**\n * Creates an observable that emits a value when the component\n * is disconnected from DOM and method `disconnectedCallback()`\n * is invoked. StencilJS will supress the invocation of this\n * method if it is not defined on the component.\n *\n * {@internal}\n */\nlet createUsingDisconnectedCallback: CreateDisconnectObservableFn = function (cmp: ComponentInterface): Observable<void> {\n    let previousDisconnected: Function | undefined = cmp.disconnectedCallback;\n\n    if (!previousDisconnected) {\n        throw new Error(`Component \"${cmp.constructor.name}\" does not have a \"disconnectedCallback()\" method defined.`);\n    }\n\n    let disconnectedSubject$: Subject<void> = new Subject<void>();\n\n    cmp.disconnectedCallback = function (): void {\n        if (previousDisconnected) {\n            previousDisconnected.call(cmp);\n        }\n\n        disconnectedSubject$.next();\n    };\n\n    return disconnectedSubject$.asObservable();\n}\n\n/**\n * Mutation observer is our next heuristic. We will monitor parent\n * node of the component and emit a value when the component is\n * disconnected from DOM. This will only work, of course, if the\n * component is not the root node of the application and component\n * is already within DOM.\n *\n * {@internal}\n */\nlet createUsingMutationObserver: CreateDisconnectObservableFn = function (cmp: ComponentInterface): Observable<void> {\n    let element: HTMLElement = getElement(cmp);\n\n    if (null === element.parentNode) {\n        throw new Error(`Component \"${cmp.constructor.name}\" is not within DOM.`);\n    }\n\n    return new Observable<void>((observer: Subscriber<void>): TeardownLogic => {\n\n        let mutationObserver: MutationObserver = new MutationObserver((mutations: MutationRecord[]): void => {\n            mutations.forEach((record: MutationRecord): void => {\n                for (let node of Array.from(record.removedNodes)) {\n                    if (node !== element) {\n                        continue;\n                    }\n\n                    observer.next();\n                    observer.complete();\n                }\n            });\n        });\n\n        mutationObserver.observe(element.parentNode, {\n            childList: true,\n            subtree:   true,\n        });\n\n        return (): void => {\n            mutationObserver.disconnect();\n            // we can not re-use this observable, so we have to delete it\n            disconnectObservables.delete(cmp);\n        };\n    });\n\n\n}\n\n/**\n * Creates an observable that emits a value when the component\n * is disconnected from DOM.\n *\n * {@internal}\n */\nfunction createDisconnectObservable(cmp: ComponentInterface): void {\n    let functions: CreateDisconnectObservableFn[] = [\n        createUsingDisconnectedCallback,\n        createUsingMutationObserver,\n    ];\n\n    for (let fn of functions) {\n        try {\n            disconnectObservables.set(cmp, fn(cmp));\n            return;\n        } catch (e) {\n            // noop\n        }\n    }\n\n    throw new Error(`Could not create disconnect observable for component \"${cmp.constructor.name}\".`);\n}\n\n/**\n * Operator that unsubscribes from the source observable when\n * the component is disconnected from DOM.\n */\nexport function untilDisconnected<T = unknown>(cmp: ComponentInterface): MonoTypeOperatorFunction<T> {\n    return (source: Observable<T>): Observable<T> => {\n        if (!disconnectObservables.has(cmp)) {\n            createDisconnectObservable(cmp);\n        }\n\n        let disconnectObservable$: Observable<void> = disconnectObservables.get(cmp);\n\n        return source.pipe(\n            takeUntil<T>(disconnectObservable$),\n        );\n    };\n}\n"],"version":3}